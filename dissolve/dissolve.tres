[gd_resource type="VisualShader" load_steps=17 format=3 uid="uid://dyfg654eyls8t"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_aq3qn"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_lvuak"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_aq3qn"]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_aq3qn"]
default_input_values = [0, 1.0, 1, 0.0]
operator = 1

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_aq3qn"]

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_jvplr"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0, 0, 0)]
op_type = 3

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_5pdmy"]
constant = Color(0.902802, 0.000873862, 0.936339, 1)

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_lvuak"]
default_input_values = [0, 0.0, 1, 0.03]

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_jvplr"]
parameter_name = "noise"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_5pdmy"]
source = 5

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_udes7"]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_ona1k"]
parameter_name = "dissolve_amount"
hint = 1

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_4metp"]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_2ykdb"]
constant = 1.0

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_iwsx7"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_py45i"]
input_name = "texture"

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform sampler2D noise;
uniform float dissolve_amount : hint_range(0.0, 1.0);



void fragment() {
// ColorConstant:16
	vec4 n_out16p0 = vec4(0.902802, 0.000874, 0.936339, 1.000000);


	vec4 n_out10p0;
// Texture2D:10
	n_out10p0 = texture(TEXTURE, UV);
	float n_out10p4 = n_out10p0.a;


// Input:12
	vec2 n_out12p0 = SCREEN_UV;


	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(noise, n_out12p0);


// FloatParameter:5
	float n_out5p0 = dissolve_amount;


// FloatOp:13
	float n_in13p0 = 1.00000;
	float n_out13p0 = n_in13p0 - n_out5p0;


// FloatConstant:6
	float n_out6p0 = 0.000000;


// FloatConstant:7
	float n_out7p0 = 1.000000;


	vec3 n_out14p0;
// If:14
	float n_in14p2 = 0.00001;
	vec3 n_in14p3 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_out3p0.x - n_out13p0) < n_in14p2)
	{
		n_out14p0 = n_in14p3;
	}
	else if(n_out3p0.x < n_out13p0)
	{
		n_out14p0 = vec3(n_out7p0);
	}
	else
	{
		n_out14p0 = vec3(n_out6p0);
	}


// Mix:15
	vec3 n_out15p0 = mix(vec3(n_out16p0.xyz), vec3(n_out10p0.xyz), n_out14p0);


// FloatOp:17
	float n_in17p1 = 0.03000;
	float n_out17p0 = n_out13p0 + n_in17p1;


	vec3 n_out4p0;
// If:4
	float n_in4p2 = 0.00001;
	vec3 n_in4p3 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_out3p0.x - n_out17p0) < n_in4p2)
	{
		n_out4p0 = n_in4p3;
	}
	else if(n_out3p0.x < n_out17p0)
	{
		n_out4p0 = vec3(n_out7p0);
	}
	else
	{
		n_out4p0 = vec3(n_out6p0);
	}


// Mix:11
	float n_in11p0 = 0.00000;
	float n_out11p0 = mix(n_in11p0, n_out4p0.x, n_out10p4);


// Output:0
	COLOR.rgb = n_out15p0;
	COLOR.a = n_out11p0;


}
"
graph_offset = Vector2(-305.646, -63.2502)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(1460, 140)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture2DParameter_jvplr")
nodes/fragment/2/position = Vector2(-720, 0)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_5pdmy")
nodes/fragment/3/position = Vector2(-160, -40)
nodes/fragment/4/node = SubResource("VisualShaderNodeIf_udes7")
nodes/fragment/4/position = Vector2(300, 520)
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatParameter_ona1k")
nodes/fragment/5/position = Vector2(-1100, 600)
nodes/fragment/6/node = SubResource("VisualShaderNodeFloatConstant_4metp")
nodes/fragment/6/position = Vector2(-160, 760)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatConstant_2ykdb")
nodes/fragment/7/position = Vector2(-160, 920)
nodes/fragment/8/node = SubResource("VisualShaderNodeInput_iwsx7")
nodes/fragment/8/position = Vector2(1940, 3880)
nodes/fragment/9/node = SubResource("VisualShaderNodeInput_py45i")
nodes/fragment/9/position = Vector2(-200, 1300)
nodes/fragment/10/node = SubResource("VisualShaderNodeTexture_aq3qn")
nodes/fragment/10/position = Vector2(260, 1140)
nodes/fragment/11/node = SubResource("VisualShaderNodeMix_lvuak")
nodes/fragment/11/position = Vector2(800, 760)
nodes/fragment/12/node = SubResource("VisualShaderNodeInput_aq3qn")
nodes/fragment/12/position = Vector2(-720, -240)
nodes/fragment/13/node = SubResource("VisualShaderNodeFloatOp_aq3qn")
nodes/fragment/13/position = Vector2(-620, 520)
nodes/fragment/14/node = SubResource("VisualShaderNodeIf_aq3qn")
nodes/fragment/14/position = Vector2(300, 40)
nodes/fragment/15/node = SubResource("VisualShaderNodeMix_jvplr")
nodes/fragment/15/position = Vector2(800, -100)
nodes/fragment/16/node = SubResource("VisualShaderNodeColorConstant_5pdmy")
nodes/fragment/16/position = Vector2(300, -260)
nodes/fragment/17/node = SubResource("VisualShaderNodeFloatOp_lvuak")
nodes/fragment/17/position = Vector2(-160, 520)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 2, 3, 0, 4, 0, 6, 0, 4, 4, 7, 0, 4, 5, 9, 0, 10, 2, 10, 4, 11, 2, 4, 0, 11, 1, 11, 0, 0, 1, 12, 0, 3, 0, 5, 0, 13, 1, 3, 0, 14, 0, 13, 0, 14, 1, 6, 0, 14, 4, 7, 0, 14, 5, 10, 0, 15, 1, 16, 0, 15, 0, 15, 0, 0, 0, 14, 0, 15, 2, 13, 0, 17, 0, 17, 0, 4, 1)
